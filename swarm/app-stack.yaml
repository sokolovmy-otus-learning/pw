services:

  link-service:
    build:
      context: ../application/link-service
      dockerfile: Dockerfile
    environment:
      - LINK_TTL_SECONDS=86400
      - UVICORN_WORKERS=4
      - ROOT_PATH=/api
      - PORT=8000
      - AEROSPIKE_HOSTS=aerospike-node1,aerospike-node2,aerospike-node3
      - AEROSPIKE_PORT=3000
      - AEROSPIKE_NAMESPACE=links
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import urllib.request, os; urllib.request.urlopen(\"http://localhost:\" + os.getenv(\"PORT\") + \"/health-status\").read()'"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 1s
    networks:
      - app-swarm-net
    deploy:
      mode: replicated
      replicas: 3
      placement:
        max_replicas_per_node: 1
      resources:
        limits:
          cpus: '0.5'
          memory: 128M

  redirect-service:
    build:
      context: ../application/redirect-service
      dockerfile: Dockerfile
    environment:
      - UVICORN_WORKERS=4
      - PORT=8001
      - AEROSPIKE_HOSTS=aerospike-node1,aerospike-node2,aerospike-node3
      - AEROSPIKE_PORT=3000
      - AEROSPIKE_NAMESPACE=links
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import urllib.request, os; urllib.request.urlopen(\"http://localhost:\" + os.getenv(\"PORT\") + \"/health-status\").read()'"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 1s
    networks:
      - app-swarm-net
    deploy:
      mode: replicated
      replicas: 3
      placement:
        max_replicas_per_node: 1
      resources:
        limits:
          cpus: '0.5'
          memory: 128M

  frontend-service:
      build:
        context: ../application/frontend-service
        dockerfile: Dockerfile
      environment:
        - API_SHORTEN_URI=/api/shorten
      restart: unless-stopped
      depends_on:
        link-service:
          condition: service_healthy
        redirect-service:
          condition: service_healthy
      networks:
        - app-swarm-net
      deploy:
        mode: replicated
        replicas: 3
        placement:
          max_replicas_per_node: 1
        resources:
          limits:
            cpus: '0.5'
            memory: 128M

  nginx:
    image: nginx:1.28.0-alpine-slim
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend:/usr/share/nginx/html:ro
    restart: unless-stopped
    depends_on:
      link-service:
          condition: service_healthy
      redirect-service:
          condition: service_healthy
      frontend-service:
          condition: service_started
    networks:
      - app-swarm-net
    deploy:
      mode: replicated
      replicas: 3
      placement:
        max_replicas_per_node: 1
      resources:
        limits:
          cpus: '0.5'
          memory: 128M

networks:
  app-swarm-net:
